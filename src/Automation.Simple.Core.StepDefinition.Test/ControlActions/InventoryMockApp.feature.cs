// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Automation.Simple.Core.StepDefinition.Test.ControlActions
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Mock Inventario")]
    public partial class MockInventarioFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "InventoryMockApp.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("es-LA"), "Mock Inventario", "\tComo automatizador de escenarios de prueba\r\n\tNecesito escribir pruebas de integr" +
                    "acion\r\n\tCon el objetivo de evitar errores", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("I go to \'http://mock1.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login a aplicacion mock")]
        [NUnit.Framework.CategoryAttribute("BVT")]
        public virtual void LoginAAplicacionMock()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login a aplicacion mock", new string[] {
                        "BVT"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
testRunner.Given("Se escribe \'admin\' en campo Usuario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 12
testRunner.And("Se escribe \'admin\' en campo Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 13
testRunner.When("Se hace click en boton Acceder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 14
testRunner.Then("Deberia ver \'Administrador\' en Informacion de usuario field en cabecera", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line 15
testRunner.When("Se hace click en Productos en menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 16
 testRunner.And("Se hace click en Agregar Producto en pagina", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 17
 testRunner.And("Se escribe \'PROD122\' en Codigo de barras", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 18
 testRunner.And("Se escribe \'PROD ASD\' en Nombre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 19
 testRunner.And("Se escribe \'Description \' en Descripcion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 20
 testRunner.And("Se escribe \'90.1\' en Precio de entrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 21
 testRunner.And("Se escribe \'80.1\' en precio de salida", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 22
 testRunner.And("Se escribe \'Lts\' en Unidad", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 23
 testRunner.And("Se escribe \'Botella\' en presentacion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 24
 testRunner.And("Se escribe \'10\' en Minima en inventario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 25
 testRunner.And("Se escribe \'90\' en Inventario inicial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 26
 testRunner.And("Se hace click en Agregar producto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
